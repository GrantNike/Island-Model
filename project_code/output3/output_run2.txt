[0.746938775510204, 0.7510204081632653, 0.7510204081632653, 0.7510204081632653, 0.7959183673469388, 0.7959183673469388, 0.8, 0.7959183673469388, 0.7959183673469388, 0.8081632653061225, 0.8081632653061225, 0.8081632653061225, 0.8163265306122449, 0.8163265306122449, 0.8489795918367347, 0.8489795918367347, 0.8489795918367347, 0.8693877551020408, 0.889795918367347, 0.8938775510204081, 0.8938775510204081, 0.9061224489795918, 0.9142857142857143, 0.9102040816326531, 0.9102040816326531, 0.9061224489795918, 0.9142857142857143, 0.9142857142857143, 0.9224489795918367, 0.9224489795918367, 0.9224489795918367, 0.9224489795918367, 0.9224489795918367, 0.9346938775510204, 0.9346938775510204, 0.9224489795918367, 0.9346938775510204, 0.9346938775510204, 0.9346938775510204, 0.9346938775510204, 0.9346938775510204, 0.9428571428571428, 0.9428571428571428, 0.9428571428571428, 0.9428571428571428, 0.9469387755102041, 0.9469387755102041, 0.9469387755102041, 0.9469387755102041, 0.9469387755102041, 0.9469387755102041]
[0.5245714285714287, 0.5912925170068029, 0.6451428571428571, 0.660408163265306, 0.6794557823129251, 0.6804353741496599, 0.6959727891156463, 0.702965986394558, 0.7073197278911565, 0.7223673469387757, 0.709795918367347, 0.7214421768707482, 0.7160272108843537, 0.7209251700680273, 0.7377959183673469, 0.752952380952381, 0.7471292517006802, 0.7517278911564625, 0.7605714285714285, 0.7694965986394557, 0.790938775510204, 0.7961360544217687, 0.8083809523809524, 0.8165442176870747, 0.8173877551020408, 0.8293061224489796, 0.8542857142857142, 0.8382857142857143, 0.8668843537414966, 0.869986394557823, 0.8770884353741496, 0.8793197278911562, 0.8794013605442177, 0.8697687074829931, 0.8893061224489797, 0.8792108843537414, 0.8764625850340134, 0.8777142857142857, 0.8820952380952379, 0.8783401360544218, 0.8794557823129253, 0.889061224489796, 0.882829931972789, 0.8788299319727891, 0.893251700680272, 0.9008979591836735, 0.8927074829931974, 0.9083809523809524, 0.8954013605442177, 0.8850884353741496, 0.882938775510204]
0.8952380952380953
 Best Answer of run: add(min(ARG5, add(sub(add(min(min(ARG11, sub(add(min(ARG2, mul(max(ARG29, ARG4), min(ARG11, ARG2))), min(ARG29, sub(protectedDiv(ARG31, ARG2), ARG5))), neg(add(sub(ARG2, ARG11), ARG15)))), mul(max(ARG29, ARG21), min(ARG11, neg(max(ARG25, ARG33))))), min(min(ARG29, min(ARG11, add(ARG3, sub(ARG2, protectedDiv(ARG9, x))))), sub(ARG1, ARG5))), neg(add(sub(ARG2, ARG11), ARG15))), ARG9)), sub(min(ARG4, ARG2), neg(min(neg(ARG23), ARG3))))